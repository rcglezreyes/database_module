services:

  golang_backend_app:
    build:
      context: ./backend
    container_name: golang_backend_app
    ports:
      - "1333:1333"
    networks:
      - database_module

  react_frontend_app:
    build:
      context: ./frontend
    container_name: react_frontend_app
    volumes:
      - ./frontend/build:/app/build 
    env_file:
      - ./frontend/.env
    networks:
      - database_module

  mongodb_database:
    build:
      context: ./mongo_db
    container_name: mongodb_database
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: new123
    volumes:
      - mongodb_datatase_data:/data/db
      - ./mongo_db/scripts_db:/docker-entrypoint-initdb.d
    networks:
      - database_module

  mongo_express_database:
    image: mongo-express:latest
    container_name: mongo_express_database
    ports:
      - "8081:8081"
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: root
      ME_CONFIG_MONGODB_ADMINPASSWORD: new123
      ME_CONFIG_MONGODB_SERVER: mongodb_database
      ME_CONFIG_OPTIONS_EDITORTHEME: default
      ME_CONFIG_BASICAUTH_USERNAME: admin
      ME_CONFIG_BASICAUTH_PASSWORD: admin
    depends_on:
      - mongodb_database
    networks:
      - database_module

  nginx:
    build:
      context: ./nginx
    container_name: nginx_server
    ports:
      - "80:80"
      - "443:443"
    extra_hosts:
      - "database.system.com:10.0.0.95"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/certificates:/etc/nginx/certificates:ro
      - ./frontend/build:/usr/share/nginx/html 
    depends_on:
      - golang_backend_app
      # - react_frontend_app
    networks:
      - database_module

volumes:
  mongodb_datatase_data:

networks:
  database_module:
    driver: bridge